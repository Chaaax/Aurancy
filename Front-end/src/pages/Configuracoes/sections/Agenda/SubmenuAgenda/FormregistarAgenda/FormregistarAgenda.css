import { useForm } from 'react-hook-form'
import './FormEventoFinanceiro.css'

export default function FormEventoFinanceiro() {
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors, isSubmitting, isSubmitSuccessful }
  } = useForm()

  const onSubmit = async (data) => {
    try {
      const token = localStorage.getItem('token')
      const res = await fetch('http://localhost:3000/api/eventos', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          Authorization: `Bearer ${token}`
        },
        body: JSON.stringify(data)
      })

      if (res.ok) {
        alert('Evento criado com sucesso!')
        reset()
      } else {
        const erro = await res.json()
        alert(erro.error || 'Erro ao criar evento')
      }
    } catch (err) {
      alert('Erro de rede')
    }
  }

  return (
    <form className="form-evento" onSubmit={handleSubmit(onSubmit)}>
      <h3>ðŸ“… Novo Evento</h3>

      <label>TÃ­tulo</label>
      <input {...register('titulo', { required: true })} placeholder="Ex: InspeÃ§Ã£o do carro" />
      {errors.titulo && <span className="erro">Campo obrigatÃ³rio</span>}

      <label>Data</label>
      <input type="date" {...register('data', { required: true })} />
      {errors.data && <span className="erro">Data obrigatÃ³ria</span>}

      <label>Valor (â‚¬)</label>
      <input type="number" step="0.01" {...register('valor')} placeholder="Opcional" />

      <label>Categoria</label>
      <input {...register('categoria')} placeholder="Ex: ManutenÃ§Ã£o, Seguros..." />

      <label>Notas</label>
      <textarea {...register('descricao')} placeholder="Detalhes ou lembrete opcional" />

      <button type="submit" disabled={isSubmitting}>
        {isSubmitting ? 'A guardar...' : 'Guardar evento'}
      </button>

      {isSubmitSuccessful && <p className="sucesso">âœ… Guardado com sucesso</p>}
    </form>
  )
}
